# Default values for runbear-worker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: runbear.azurecr.io/runbear/runbear-worker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

runbear:
  apiHost: "https://api.runbear.io"
  # apiSecret: SECRET_TOKEN
  # apiSecretExistingSecret: runbear-api-secret

  executor:
    image:
      repository: runbear.azurecr.io/runbear/runbear-runtime
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: ""

    # serviceAccount used to run the executor pod.
    serviceAccount:
      create: true
      name: runbear-executor
      # existingServiceAccountName: ""

    # Set up rbac rules for the executor service account.
    # RBAC rules are applied to runbook executions.
    rbac:
      create: true
      # Specify existing clusterrole to bind to the executor service account.
      # i.e. cluster-admin, admin, edit, view
      existingClusterRoleName: edit

      # Either clusterRoleName or roleName must be set.
      clusterRoleName: "runbear-executor"
      # Specify custom rules for the clusterrole.
      # Not used if existingClusterRoleName is set.
      clusterRoleRules: {}
        # - apiGroups: [""]
        #   resources:
        #     - nodes
        #     - namespaces
        #     - pods
        #   verbs: ["get", "list", "watch"]

      roleName: ""
      roleRules: {}
        # - apiGroups: [""]
        #   resources:
        #     - configmaps
        #   verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
